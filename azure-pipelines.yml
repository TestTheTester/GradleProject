# Gradle
# Build your Java project and run tests with Gradle using a Gradle wrapper script.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

steps:
- task: Gradle@2
  inputs:
    workingDirectory: ''
    gradleWrapperFile: 'gradlew'
    gradleOptions: '-Xmx3072m'
    javaHomeOption: 'JDKVersion'
    jdkVersionOption: '1.8'
    jdkArchitectureOption: 'x64'
    publishJUnitResults: true
    testResultsFiles: '**/TEST-*.xml'
    tasks: 'build'

- task: Gradle@2
  inputs:
    gradleWrapperFile: 'gradlew'
    tasks: 'assemble'
    

- task: Gradle@2
  inputs:
    gradleWrapperFile: 'gradlew'
    tasks: 'test'
    publishJUnitResults: true
    testResultsFiles: '**/TEST-*.xml'

- task: Gradle@2
  inputs:
    gradleWrapperFile: 'gradlew'
    tasks: 'jacocoTestReport'

- task: PublishCodeCoverageResults@1
  inputs:
    codeCoverageTool: 'JaCoCo'
    summaryFileLocation: '$(Build.SourcesDirectory)/build/reports/jacoco/test/jacocoTestReport.xml'
    reportDirectory: '$(Build.SourcesDirectory)/build/reports/jacoco/test/html'

- task: CopyFiles@2
  inputs:
    SourceFolder: '$(build.SourcesDirectory)'
    Contents: '**/*.jar'
    TargetFolder: '$(build.artifactstagingdirectory)'


